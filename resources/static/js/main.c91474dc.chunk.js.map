{"version":3,"sources":["helper/TemplateComponent.js","App.js","custom-element/et-app.js"],"names":["TemplateComponent","css","template","data","App","name","nameTwo","templateId","useState","html","bold","text","render","bannerType","ATTRIBUTES","selectedTemplateId","WidgetElement","oldValue","newValue","Object","values","includes","Error","this","mountPoint","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"6PAEe,SAASA,EAAT,GAAqD,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACvD,OACI,mCACI,cAAC,IAAD,CAAUD,SAAUA,EAAUC,KAAMA,EAAMF,IAAKA,MC+B5CG,MA/Bf,YAA4C,EAA7BC,KAA6B,EAAvBC,QAAuB,EAAdC,WAAe,IAEzC,EAAcC,mBAAS,6EAAhBP,EAAP,oBAOA,EAAeO,mBAAS,6FAAjBC,EAAP,oBAeA,OACI,8BACI,cAACT,EAAD,CAAmBC,IAAKA,EAAKC,SAAUO,EAAMN,KAXxC,CACTE,KAAM,QACNK,KAAM,WACF,OAAO,SAAUC,EAAMC,MAI3BC,WAAY,mBCrBdC,EAAa,CACfT,KAAM,OACNC,QAAS,UACTS,mBAAoB,sBAGlBC,E,8KAMF,SAAyBX,EAAMY,EAAUC,GACrC,IAAKC,OAAOC,OAAON,GAAYO,SAAShB,GACpC,MAAM,IAAIiB,MAAJ,uCAA0CjB,IAEhDkB,KAAKC,YAAcN,IAAaD,GAChCM,KAAKX,W,+BAIb,WACIW,KAAKC,WAAaC,SAASC,cAAc,OACzCH,KAAKI,YAAYJ,KAAKC,YACtBD,KAAKX,W,oBAGT,WACI,IAAMP,EAAOkB,KAAKK,aAAad,EAAWT,MACpCC,EAAUiB,KAAKK,aAAad,EAAWR,SACvCC,EAAagB,KAAKK,aAAad,EAAWC,oBAChDc,IAASjB,OAAO,cAAC,EAAD,CAAKP,KAAMA,EAAMC,QAASA,EAASC,WAAYA,IAAegB,KAAKC,e,+BAvBvF,WACI,OAAOL,OAAOC,OAAON,O,eAHDgB,cA6B5BC,eAAeC,OAAO,YAAahB,K","file":"static/js/main.c91474dc.chunk.js","sourcesContent":["import Template from \"react-mustache-template-component\";\n\nexport default function TemplateComponent({ css, template, data }) {\n    return (\n        <>\n            <Template template={template} data={data} css={css}/>\n        </>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { getTemplate } from './api/Api';\nimport Handlebars from \"handlebars\";\nimport TemplateComponent from './helper/TemplateComponent';\n\nfunction App({ name, nameTwo, templateId }) {\n\n    const [css] = useState(\n        `#wrapper {\n          background:red;\n          padding:10px;\n        }`\n    ); // compiled scss\n\n    const [html] = useState(`\n      <div id=\"wrapper\">\n        <h1 class=\"title\">{{name}}</h1>\n      </div>\n      `); // template\n\n    const data = {\n        name: \"VIJAY\",\n        bold: function () {\n            return function (text, render) {\n                return;\n            };\n        },\n        bannerType: \"wideBanner\"\n    };\n    return (\n        <div>\n            <TemplateComponent css={css} template={html} data={data} />\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\n\n\nconst ATTRIBUTES = {\n    name: 'name',\n    nameTwo: 'nameTwo',\n    selectedTemplateId: 'selectedTemplateId'\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        const nameTwo = this.getAttribute(ATTRIBUTES.nameTwo);\n        const templateId = this.getAttribute(ATTRIBUTES.selectedTemplateId);\n        ReactDOM.render(<App name={name} nameTwo={nameTwo} templateId={templateId}/>, this.mountPoint);\n    }\n}\n\ncustomElements.define('my-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}