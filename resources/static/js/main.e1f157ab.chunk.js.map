{"version":3,"sources":["api/Api.js","App.js","custom-element/et-app.js"],"names":["apiEndPoint","getTemplate","a","searchby","searchTerm","console","log","axios","get","App","name","nameTwo","templateId","useState","setTemplate","Ref","useRef","this","JSON","parse","decodeURIComponent","useEffect","data","contentshape","hbr","template","Handlebars","compile","current","innerHTML","ref","ATTRIBUTES","selectedTemplateId","WidgetElement","oldValue","newValue","Object","values","includes","Error","mountPoint","render","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"4PAIMA,EAAc,gDAEPC,EAAW,uCAAG,0CAAAC,EAAA,6DAAOC,EAAP,+BAAkB,OAAQC,EAA1B,uBACvBC,QAAQC,IAAI,iBADW,SAEVC,IAAMC,IAAN,UAAaR,GAAb,OAA2BG,EAA3B,YAAuCC,IAF7B,mFAAH,qD,wBC2BTK,MA7Bf,YAA0C,EAA5BC,KAA6B,IAAvBC,EAAsB,EAAtBA,QAEhB,GAFsC,EAAbC,WAEOC,mBAAS,KAAzC,mBAAiBC,GAAjB,WAEMC,EAAMC,iBAAOC,MAiBnB,MAfa,OAEbN,EAAUO,KAAKC,MAAM,GAAGC,mBAAmBT,IAE3CU,qBAAU,WACN,sBAAC,kCAAAnB,EAAA,sEACwBD,EAAY,OAN5B,QAKR,gBACUqB,EADV,EACUA,KACPR,EAAYQ,EAAK,GAAGC,cACdC,EAHT,UAGkBF,EAAK,GAAGC,cACjBE,EAAWC,IAAWC,QAAQH,GAEpCT,EAAIa,QAAQC,UAAYJ,EAAS,CAAEf,KAAM,gBAN5C,0CAAD,KAQD,IAGC,8BACI,qBAAKoB,IAAKf,OCrBhBgB,EAAa,CACfrB,KAAM,OACNC,QAAS,UACTqB,mBAAoB,sBAGlBC,E,8KAMF,SAAyBvB,EAAMwB,EAAUC,GACrC,IAAKC,OAAOC,OAAON,GAAYO,SAAS5B,GACpC,MAAM,IAAI6B,MAAJ,uCAA0C7B,IAEhDO,KAAKuB,YAAcL,IAAaD,GAChCjB,KAAKwB,W,+BAIb,WACIxB,KAAKuB,WAAaE,SAASC,cAAc,OACzC1B,KAAK2B,YAAY3B,KAAKuB,YACtBvB,KAAKwB,W,oBAGT,WACI,IAAM/B,EAAOO,KAAK4B,aAAad,EAAWrB,MACpCC,EAAUM,KAAK4B,aAAad,EAAWpB,SACvCC,EAAaK,KAAK4B,aAAad,EAAWC,oBAChDc,IAASL,OAAO,cAAC,EAAD,CAAK/B,KAAMA,EAAMC,QAASA,EAASC,WAAYA,IAAeK,KAAKuB,e,+BAvBvF,WACI,OAAOJ,OAAOC,OAAON,O,eAHDgB,cA6B5BC,eAAeC,OAAO,YAAahB,K","file":"static/js/main.e1f157ab.chunk.js","sourcesContent":["import axios from 'axios';\n\n// http://localhost:8082/api/templates/searchby/code/1002\n\nconst apiEndPoint = 'http://localhost:8082/api/templates/searchby/';\n\nexport const getTemplate = async (searchby = 'code', searchTerm) => {\n    console.log(\"GETTEMPLATE 1\");\n    return await axios.get(`${apiEndPoint}${searchby}/${searchTerm}`)\n}\n\n// export const getTemplate = async (token) => {\n//     return await axios.get(`http://localhost:8082/api/getcollectiontype`);\n// }","import React, { useEffect, useRef, useState } from 'react';\nimport { getTemplate } from './api/Api';\nimport Handlebars from \"handlebars\";\n\nfunction App({name, nameTwo, templateId}) {\n\n    const [template, setTemplate] = useState('');\n    // const [afterTranspile, setAfterTranspile] = useState('')\n    const Ref = useRef(this);\n\n    templateId = '1002'\n\n    nameTwo = JSON.parse(''+decodeURIComponent(nameTwo));\n\n    useEffect(() => {\n        (async () => {\n            const {data} = await getTemplate('code', templateId);\n            setTemplate(data[0].contentshape);\n            const hbr = `${data[0].contentshape}`;\n            const template = Handlebars.compile(hbr);\n            // setAfterTranspile(template({ name: \"Vijay Yadav\" }))\n            Ref.current.innerHTML = template({ name: \"Vijay Yadav\" });\n        })()\n    }, [])\n\n    return (\n        <div>\n            <div ref={Ref}>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\n\n\nconst ATTRIBUTES = {\n    name: 'name',\n    nameTwo: 'nameTwo',\n    selectedTemplateId: 'selectedTemplateId'\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        const nameTwo = this.getAttribute(ATTRIBUTES.nameTwo);\n        const templateId = this.getAttribute(ATTRIBUTES.selectedTemplateId);\n        ReactDOM.render(<App name={name} nameTwo={nameTwo} templateId={templateId}/>, this.mountPoint);\n    }\n}\n\ncustomElements.define('my-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}