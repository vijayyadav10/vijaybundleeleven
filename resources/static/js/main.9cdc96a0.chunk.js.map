{"version":3,"sources":["App.js","custom-element/et-app.js"],"names":["App","name","nameTwo","templateId","console","log","JSON","parse","decodeURIComponent","map","el","className","style","boxShadow","height","width","borderBottom","padding","id","version","publishedAt","description","ATTRIBUTES","selectedTemplateId","WidgetElement","oldValue","newValue","Object","values","includes","Error","this","mountPoint","render","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"+MAqCeA,MAnCf,YAA0C,EAA5BC,KAA6B,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAKzB,OAHAC,QAAQC,IAAI,aAAcF,GAE1BD,EAAUI,KAAKC,MAAM,GAAGC,mBAAmBN,IASvC,aAPA,CAOA,gBAEQA,GAAWA,EAAQO,KAAI,SAAAC,GACnB,OACI,sBAAKC,UAAU,SAASC,MAAO,CAAEC,UAAW,4BAA6BC,OAAQ,QAASC,MAAO,SAAjG,UACI,qBAAKJ,UAAU,aAAaC,MAAO,CAAEE,OAAQ,MAAOD,UAAW,kCAAmCG,aAAc,mBAAhH,SACI,sBAAKJ,MAAO,CAAEK,QAAS,QAAvB,UACI,8BAAK,yCAAYP,EAAGQ,QACpB,gCAAK,4CAAwBR,EAAGT,KAAMS,EAAGS,gBAGjD,qBAAKR,UAAU,WAAWC,MAAO,CAAEC,UAAW,2CAA4CC,OAAQ,OAAlG,SACI,sBAAKF,MAAO,CAAEK,QAAS,QAAvB,UAAkCP,EAAGU,YAAY,gCAAK,mDAA+BV,EAAGW,sBARiBX,EAAGQ,UCbtII,EAAa,CACfrB,KAAM,OACNC,QAAS,UACTqB,mBAAoB,sBAGlBC,E,8KAMF,SAAyBvB,EAAMwB,EAAUC,GACrC,IAAKC,OAAOC,OAAON,GAAYO,SAAS5B,GACpC,MAAM,IAAI6B,MAAJ,uCAA0C7B,IAEhD8B,KAAKC,YAAcN,IAAaD,GAChCM,KAAKE,W,+BAIb,WACIF,KAAKC,WAAaE,SAASC,cAAc,OACzCJ,KAAKK,YAAYL,KAAKC,YACtBD,KAAKE,W,oBAGT,WACI,IAAMhC,EAAO8B,KAAKM,aAAaf,EAAWrB,MACpCC,EAAU6B,KAAKM,aAAaf,EAAWpB,SACvCC,EAAa4B,KAAKM,aAAaf,EAAWC,oBAChDe,IAASL,OAAO,cAAC,EAAD,CAAKhC,KAAMA,EAAMC,QAASA,EAASC,WAAYA,IAAe4B,KAAKC,e,+BAvBvF,WACI,OAAOL,OAAOC,OAAON,O,eAHDiB,cA6B5BC,eAAeC,OAAO,YAAajB,K","file":"static/js/main.9cdc96a0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App({name, nameTwo, templateId}) {\n\n    console.log(\"templateId\", templateId);\n\n    nameTwo = JSON.parse(''+decodeURIComponent(nameTwo));\n    return (\n        // <div>\n        //     <header>\n        //         <p>\n        //             Hello, {name}!\n        //         </p>\n        //     </header>\n        // </div>\n        <div>\n            {\n                nameTwo && nameTwo.map(el => {\n                    return (\n                        <div className=\"header\" style={{ boxShadow: \"3px 12px 14px 0px #838383\", height: \"25rem\", width: \"20rem\" }} key={el.id}>\n                            <div className=\"cardHeader\" style={{ height: \"25%\", boxShadow: \"inset 1px -1px 20px 6px #aeced2\", borderBottom: \"1px solid black\" }}>\n                                <div style={{ padding: \"1rem\" }}>\n                                    <div><strong>#: {el.id}</strong></div>\n                                    <div><strong>Name: </strong>{el.name}{el.version}</div>\n                                </div>\n                            </div>\n                            <div className=\"cardBody\" style={{ boxShadow: \"rgb(210 174 174) 1px -1px 20px 6px inset\", height: \"75%\" }}>\n                                <div style={{ padding: \"1rem\" }}>{el.publishedAt}<div><strong>Description: </strong>{el.description}</div></div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\n\n\nconst ATTRIBUTES = {\n    name: 'name',\n    nameTwo: 'nameTwo',\n    selectedTemplateId: 'selectedTemplateId'\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        const nameTwo = this.getAttribute(ATTRIBUTES.nameTwo);\n        const templateId = this.getAttribute(ATTRIBUTES.selectedTemplateId);\n        ReactDOM.render(<App name={name} nameTwo={nameTwo} templateId={templateId}/>, this.mountPoint);\n    }\n}\n\ncustomElements.define('my-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}